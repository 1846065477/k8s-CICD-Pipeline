node ("jenkins-k8s"){
 stage('代码获取'){
 checkout([$class: 'GitSCM', branches: [[name: '${Tag}']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [],userRemoteConfigs: [[credentialsId: 'b1693882-04f0-425b-9e76-e7fd7b6cc515', url: 'git@172.16.8.68:k8s/gateway.git']]])
 }
 
 stage('SonarQube代码检查') {
        def sonarqubeScannerHome = tool name: 'SonarQube Scanner'
        withSonarQubeEnv('SonarQube') {
            sh "${sonarqubeScannerHome}/bin/sonar-scanner"
    }
 }  
  stage('发布确认') {
                input "检查完成，是否发布?"
        }    
 stage('MAVEN构建代码') {
    sh '''
    export JAVA_HOME=/app/jdk  
    /usr/local/maven/bin/mvn clean package -Dmaven.test.skip=true
    '''
 }
 stage('K8S镜像构建') {
     withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
     sh '''
     docker login 172.16.8.65 -u ${dockerHubUser}  -p ${dockerHubPassword} 
     docker build -t 172.16.8.65/qas/gateway:${Tag} -f deploy/qas/Dockerfile .
     docker push 172.16.8.65/qas/gateway:${Tag}
     docker rmi -f 172.16.8.65/qas/gateway:${Tag}
     '''
  }
 }
 stage('Deploy to K8s'){
     sh '''
     sed -i "/172.16.8.65/{s/latest/${Tag}/}" deploy/qas/Deployment.yaml
     kubectl apply -f deploy/qas/Deployment.yaml
       '''
  }
}
